/**********************************************************************************************************************************************************
 * SetRotation
 * -----------
 *
 * 2021-09-29
 *
 * Set the rotation of the object it is on (degrees).
 *
 * Roy Davies, Smart Digital Lab, University of Auckland.
 **********************************************************************************************************************************************************/
 
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Public functions
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
public interface _SetRotation
{
    void Input(XRData newRotation);
}
// ----------------------------------------------------------------------------------------------------------------------------------------------------------



// ----------------------------------------------------------------------------------------------------------------------------------------------------------
// Main class
// ----------------------------------------------------------------------------------------------------------------------------------------------------------
[AddComponentMenu("OpenXR UX/Tools/Set Rotation")]
public class SetRotation : MonoBehaviour, _SetRotation
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Public variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    [Header("____________________________________________________________________________________________________")]
    [Header("Rotate the object it is on to the given angle on the y axis.\n____________________________________________________________________________________________________")]
    [Header("INPUTS\n\n - Input() - Angle to rotate to.")]

    [Header("____________________________________________________________________________________________________")]
    [Header("SETTINGS")]
    [Header("Rotation Speed (degrees per second)")]
    public float rotationSpeed = 10.0f;

    [Header("____________________________________________________________________________________________________")]
    [Header("OUTPUTS")]


    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Private variables
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    private Quaternion targetRotation;
    // ------------------------------------------------------------------------------------------------------------------------------------------------------


    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Input values of Rotation in Degrees
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    public void Input (XRData newRotation)
    {
        Quaternion newQuat = new Quaternion();
        newQuat.eulerAngles = new Vector3(0.0f, newRotation.ToFloat(), 0.0f);
        targetRotation = newQuat; 
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------



    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    // Rotate towards new rotation at the given speed.
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    void Update()
    {
        float step = rotationSpeed * Time.deltaTime;
        transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, step);
    }
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
}
